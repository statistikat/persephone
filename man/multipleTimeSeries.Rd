% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/per_batch.R
\name{multipleTimeSeries}
\alias{multipleTimeSeries}
\title{R6 Class for hierarchical time series}
\description{
Combine mutliple objects of persephone objects into a new
persephone object. On the resulting objects seasonal adjustment can
be performed to all elements at once
}
\examples{
\dontrun{
obj_x13 <- per_x13(AirPassengers, "RSA3")

bt <- per_batch(a = obj_x13, b = obj_x13, method = "x13")
bt$run()

bt$adjusted

bt$updateParams(easter.enabled = FALSE)

bt$updateParams(component = "a", usrdef.outliersEnabled = TRUE,
                     usrdef.outliersType = c("AO","LS","LS"),
                     usrdef.outliersDate=c("1950-01-01","1955-04-01","1959-10-01"))
}


## ------------------------------------------------
## Method `multipleTimeSeries$run`
## ------------------------------------------------

per_x13(AirPassengers)$run()
}
\section{Super class}{
\code{\link[persephone:persephone]{persephone::persephone}} -> \code{multipleTimeSeries}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{components}}{the series of the multiple time series}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{adjusted}}{results from the seasonal adjustment}

\item{\code{params}}{of all components}

\item{\code{forecasts}}{get forecasts}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{multipleTimeSeries$new()}}
\item \href{#method-run}{\code{multipleTimeSeries$run()}}
\item \href{#method-print}{\code{multipleTimeSeries$print()}}
\item \href{#method-set_options}{\code{multipleTimeSeries$set_options()}}
\item \href{#method-iterate}{\code{multipleTimeSeries$iterate()}}
\item \href{#method-updateParams}{\code{multipleTimeSeries$updateParams()}}
\item \href{#method-get_component}{\code{multipleTimeSeries$get_component()}}
\item \href{#method-generate_qr_table}{\code{multipleTimeSeries$generate_qr_table()}}
\item \href{#method-clone}{\code{multipleTimeSeries$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="persephone" data-topic="persephone" data-id="plot">}\href{../../persephone/html/persephone.html#method-plot}{\code{persephone::persephone$plot()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="persephone" data-topic="persephone" data-id="plotResiduals">}\href{../../persephone/html/persephone.html#method-plotResiduals}{\code{persephone::persephone$plotResiduals()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="persephone" data-topic="persephone" data-id="plotSeasIrrCal">}\href{../../persephone/html/persephone.html#method-plotSeasIrrCal}{\code{persephone::persephone$plotSeasIrrCal()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
create a new multiple time series object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$new(
  ...,
  method = c("tramoseats", "x13"),
  userdefined = NULL,
  spec = NULL,
  list = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{one or more objects which are either of class persephone or
can be coerced to persephone objects with as_persephone. If more than
one element is supplied, the underlying time series must have the same
time instances. All elements supplied in ... must be named.}

\item{\code{method}}{specifies the method to be used for the direct adjustment
of the aggregate series. tramoseats or x13}

\item{\code{userdefined}}{passed as the userdefined argument to tramoseats() or
x13()}

\item{\code{spec}}{a model specification returned by x13_spec() or
tramoseats_spec()}

\item{\code{list}}{a list of persephone objects as alternative input to \code{...}.
This argument can also handle mts objects}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
run the model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$run(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{if \code{FALSE} (the default), the results of the run will
be returned invisibly}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{per_x13(AirPassengers)$run()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
print mutliple timeseries to screen
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_options"></a>}}
\if{latex}{\out{\hypertarget{method-set_options}{}}}
\subsection{Method \code{set_options()}}{
sets options for all entries of the dependency tree
recursively (if recursive = TRUE). See
vignette("persephone-hierarchical") for more details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$set_options(userdefined = NA, spec = NA, component = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userdefined}}{additional outputs to generate while running. See
\code{\link[=x13]{x13()}} and \code{\link[=tramoseats]{tramoseats()}}.}

\item{\code{spec}}{specifications generated by \code{x13_spec()} or
\code{tramoseats_spec()}}

\item{\code{component}}{which component to modify.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-iterate"></a>}}
\if{latex}{\out{\hypertarget{method-iterate}{}}}
\subsection{Method \code{iterate()}}{
iterate over all components
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$iterate(
  fun,
  as_table = FALSE,
  component = "",
  unnest = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{a function that takes a persephone object as a parameter}

\item{\code{as_table}}{if true, the return value of this method will be coerced
to a data.frame}

\item{\code{component}}{the id of the component}

\item{\code{unnest}}{if \code{as_table = FALSE}, converts the return value from a
nested list into a flat list}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
this functin is similar to \code{lapply()} in the sense that it
can be used to apply a function to several persephone objects
simultaniusely
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateParams"></a>}}
\if{latex}{\out{\hypertarget{method-updateParams}{}}}
\subsection{Method \code{updateParams()}}{
change all or some parameters of components
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$updateParams(component = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{component}}{character vector with names of the components
for which the parameters should be changed. If NULL (default) the
parameters of all components will be changed}

\item{\code{...}}{named arguments to be changed}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
this functions provides the possibility to update
parameters of one or more persephone single objects
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_component"></a>}}
\if{latex}{\out{\hypertarget{method-get_component}{}}}
\subsection{Method \code{get_component()}}{
extract a component series
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$get_component(component_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{component_id}}{the id of a component}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generate_qr_table"></a>}}
\if{latex}{\out{\hypertarget{method-generate_qr_table}{}}}
\subsection{Method \code{generate_qr_table()}}{
Generate a table for the eurostat quality report
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$generate_qr_table(component = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{component}}{(optional) a sub-component to create the report for}

\item{\code{...}}{additional arguments for the generate qr table function}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{multipleTimeSeries$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
