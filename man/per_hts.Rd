% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hierarchicalTimeSeries.R
\docType{data}
\name{hierarchicalTimeSeries}
\alias{hierarchicalTimeSeries}
\alias{per_hts}
\title{Define a hierarchical time series}
\description{
Combine mutliple objects of persephone objects into a new persephone object.
The resulting time series can perform direct and indirect adjustments.
}
\section{Inherits}{
 \link{persephone}
}

\section{Constructor}{

\preformatted{
per_hts(..., method = c("tramoseats", "x13"),
        userdefined = NULL, spec = NULL)
}
\itemize{
\item \code{...} should contain one or more objects which are either of class
\code{persephone} or can be coerced to \code{persephone} objects with
\code{as_persephone}. If more than one element is supplied, the underlying
time series must have the same time instances. All elements supplied
in \code{...} must be named.
\item \code{list} a list of \code{persephone} objects as alternative input to \code{...}. This
argument can also handle \code{mts objects}
\item \code{weights} either a vector
if the same weight is used for all time points or a list of ts objects or a
mts object if the weight varies for different time points. They must have
the same length as the number of components.
\item \code{method} specifies the method to be used for the direct adjustment of the aggregate
series. tramoseats or x13
\item \code{userdefined} is passed as the userdefined argument to \code{\link[=tramoseats]{tramoseats()}} or
\code{\link[=x13]{x13()}}
\item \code{spec} a model specification returned by \code{\link[=x13_spec]{x13_spec()}} or
\code{\link[=tramoseats_spec]{tramoseats_spec()}}
}
}

\section{Fields}{

\itemize{
\item \code{$components}. A list of \code{persephone} objects.
\item \strong{\code{$adjusted_indirect}}. Results from indirect adjustments which means the
components are first adjusted and the adjusted series are then aggregated
}
}

\section{Methods}{

\itemize{
\item \code{$iterate(fun, ...)} can be used to iterate over the hierarchy tree. See
\code{\link[=iterate]{iterate()}}.
\item \code{$set_options(userdefined, spec, recursive = TRUE, component = "")} sets
options for all entries of the dependency tree recursively if
\code{recursive = TRUE} (the default). See
\code{vignette("persephone-hierarchical")}.
}
}

\examples{
obj_x13 <- per_x13(AirPassengers, "RSA3")

ht <- per_hts(a = obj_x13, b = obj_x13, method = "x13")
ht$run()
ht$adjusted_direct
ht$adjusted_indirect

ht2 <- per_hts(a = ht, b = obj_x13)
ht2$run()
ht2$adjusted_direct
ht2$adjusted_indirect

#-------- example with industrial price indices -----------

data(ipi_c_eu, package = "RJDemetra")
# Reducing the data set to the EU28 countries
ipi_eu <- ipi_c_eu[, -c(1:3, 32:37)]

# We want to add an extra layer and split the EU28 countries in two groups
ht_half_europe_1  <- per_hts(list = ipi_eu[, 1:14], method = "tramoseats")

# Alternative way to use do.call
ht_half_europe_2 <- do.call(per_hts, ipi_eu[, 15:28])

# Now we generate the object for EU28
ht_europe <- per_hts(
  halfEU_1 = ht_half_europe_1,
  halfEU_2 = ht_half_europe_2,
  spec = "RSA5c",
  method = "x13"
)

# start the seasonal adjustment
ht_europe$run()

# accessing the directly and indirectly adjusted series for EU28
ht_europe$adjusted_direct
ht_europe$adjusted_indirect

# accessing the directly and indirectly adjusted series for half of Europe
ht_europe$components$halfEU_2$adjusted_direct
ht_europe$components$halfEU_2$adjusted_indirect

# accessing the adjusted series for a country
ht_europe$components$halfEU_2$components$AT$adjusted_direct
}
\keyword{datasets}
